/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bibliographs;

import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JEditorPane;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Brandon
 */
public class Conference_paper extends javax.swing.JFrame {

    /**
     * Creates new form Conference_paper
     */
    public Conference_paper() {
        initComponents();
          Connect();
        table_upload();
    }
     Connection con;
     PreparedStatement pst;
     ResultSet rs; 
     
     public void Connect(){
           
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");//load drivers
             con = DriverManager.getConnection("jdbc:mysql://localhost/bgms","root","");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Conference_paper.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Conference_paper.class.getName()).log(Level.SEVERE, null, ex);
        }
     }
    
      public void table_upload(){
         // load table
         
         int c;
        try {
            pst = con.prepareStatement("select * from conference_paper");
            ResultSet rs = pst.executeQuery();
            ResultSetMetaData rsd = rs.getMetaData();
            c = rsd.getColumnCount();
            DefaultTableModel d = (DefaultTableModel)tableConference.getModel();
            d.setRowCount(0);
            
            while(rs.next()){
                Vector v2 = new Vector();
                for(int i =1;i<=c;i++){
                  v2.add(rs.getString("Id"));
                  v2.add(rs.getString("Authors"));
                  v2.add(rs.getString("Year"));
                  v2.add(rs.getString("Title"));
                  v2.add(rs.getString("Conference"));
                  v2.add(rs.getString("Pages"));
                }
                d.addRow(v2);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Conference_paper.class.getName()).log(Level.SEVERE, null, ex);
        }
         
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txtauthors = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtyear = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txttitle = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtconference = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtpages = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableConference = new javax.swing.JTable();
        txtsearch = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Conference_paper");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "New conference", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Serif", 1, 14))); // NOI18N
        jPanel2.setOpaque(false);

        txtauthors.setText(" ");

        jLabel2.setText("Authors");

        jLabel3.setText("Year");

        txtyear.setText(" ");

        jLabel4.setText("Title");

        txttitle.setText(" ");
        txttitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttitleActionPerformed(evt);
            }
        });

        jLabel5.setText("Conference");

        txtconference.setText(" ");

        jLabel6.setText("Pages");

        txtpages.setText(" ");

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Edit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Cancel");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Delete");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton6.setText("Home");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtauthors)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(txtyear, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(txttitle, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(txtconference)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(txtpages, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addComponent(jButton4))
                .addGap(23, 23, 23))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jButton6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtauthors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtyear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txttitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtconference, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtpages, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );

        tableConference.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        tableConference.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Authors", "Year", "Title", "Conference", "Pages"
            }
        ));
        tableConference.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableConferenceMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableConference);

        txtsearch.setText(" ");

        jButton5.setText("Search");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton5))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txttitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttitleActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String Authors = txtauthors.getText();
        String Year = txtyear.getText();
        String Title = txttitle.getText();
        String Conference = txtconference.getText();
        String Pages = txtpages.getText();
        
         try {
            pst = con.prepareStatement("insert into conference_paper(Authors,Year,Title,Conference,Pages) values(?,?,?,?,?)");
            pst.setString(1, Authors);
            pst.setString(2, Year);
            pst.setString(3, Title);
            pst.setString(4, Conference);
            pst.setString(5, Pages );
            
             
            
             int k = pst.executeUpdate();
             if(k==1){
              JOptionPane.showMessageDialog(null,"conference_paper added");
              txtauthors.setText("");
              txtyear.setText("");
              txttitle.setText("");
              txtconference.setText("");
              txtpages.setText("");
              txtauthors.requestFocus();
              
               String referenceAPA = Authors + " (" + Year + "). " + Title + ". " + Conference + ", " + Pages + ".";
        System.out.println("<p>" + referenceAPA+ "</p>");
        
        String referenceIEEE = Authors+ ", "+ Year+", \""+ Title+ "\",  "+Conference+" "+ Pages; 
        System.out.println("<p>" + referenceIEEE+ "</p>");

        // display the generated reference in HTML format
        JEditorPane output = new JEditorPane();
        output.setContentType("text/html");
        output.setEditable(false);
               output.setEditable(false);
        output.setText("<html><body>" + "<p>" + referenceAPA + "</p>" + "<p>" + referenceIEEE + "</p>" + "</body></html>");
        
              
              table_upload();
               File file=new File("reference.html");
     file.createNewFile();

     OutputStreamWriter writer=new OutputStreamWriter(new FileOutputStream(file));

     writer.write(output.getText());

     writer.close();

     // open the file in the default browser
     Desktop.getDesktop().browse(file.toURI());
           
           }
             else{
                JOptionPane.showMessageDialog(null,"error");
             }
        } catch (SQLException ex) {
            Logger.getLogger(Conference_paper.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Conference_paper.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel d1 = (DefaultTableModel)tableConference.getModel();
        int selectIndex = tableConference.getSelectedRow();
         int id =  Integer.parseInt(d1.getValueAt(selectIndex,   0).toString());
        
        
        try {
            pst = con.prepareStatement("delete from conference_paper where id = ?");
            pst.setInt(1, id);
             int k = pst.executeUpdate();
             if(k==1){
              JOptionPane.showMessageDialog(null,"conference_paper Deleted");
              txtauthors.setText("");
              txtyear.setText("");
              txttitle.setText("");
              txtconference.setText("");
              txtpages.setText("");
              txtauthors.requestFocus();
              table_upload();
              jButton1.setEnabled(true);
           }
             else{
                JOptionPane.showMessageDialog(null,"error");
             }
        } catch (SQLException ex) {
            Logger.getLogger(Conference_paper.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosing

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
          // Get the table model and selected row index
    DefaultTableModel d1 = (DefaultTableModel)tableConference.getModel();
    int selectIndex = tableConference.getSelectedRow();
    
    // Check if a row is selected
    if (selectIndex >= 0) {
        // Get the ID of the selected row
        int id =  Integer.parseInt(d1.getValueAt(selectIndex,   0).toString());
        
        try{
            // Prepare the SQL statement to select rows with matching authors
            String sql = "select * from conference_paper where authors = ?";
            pst = con.prepareStatement(sql);
            
            // Set the parameter for the authors column to the text in txtsearch
            pst.setString(1, txtsearch.getText());
            
            // Execute the query and get the result set
            ResultSet rs = pst.executeQuery();
            
            // If there is a matching row, update the text fields with its values
            if (rs.next()){
                txtauthors.setText(rs.getString("Authors"));
                txtyear.setText(rs.getString("Year"));  
                txttitle.setText(rs.getString("Title"));
                txtconference.setText(rs.getString("Conference"));
                txtpages.setText(rs.getString("Pages"));
            }
        } catch(Exception e){
           
        }
    }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         DefaultTableModel d1 = (DefaultTableModel)tableConference.getModel();
        int selectIndex = tableConference.getSelectedRow();
         int id =  Integer.parseInt(d1.getValueAt(selectIndex,   0).toString());
        
        
         String Authors = txtauthors.getText();
       String Year = txtyear.getText();
        String Title = txttitle.getText();
        String Conference = txtconference.getText();
        String Pages = txtpages.getText();
        
        try {
            pst = con.prepareStatement("update conference_paper set Authors=?, Year = ?, Title = ?,Conference =?, pages=? where id = ?");
            pst.setString(1, Authors);
            pst.setString(2, Year);
            pst.setString(3, Title);
            pst.setString(4, Conference);
            pst.setString(5, Pages);
            pst.setInt(6, id);
             int k = pst.executeUpdate();
             if(k==1){
              JOptionPane.showMessageDialog(null,"conference_paper Updated");
              txtauthors.setText("");
              txtyear.setText("");
              txttitle.setText("");
              txtconference.setText("");
              txtpages.setText("");
              txtauthors.requestFocus();
              table_upload();
              jButton1.setEnabled(true);
           }
             else{
                JOptionPane.showMessageDialog(null,"error");
             }
        } catch (SQLException ex) {
            Logger.getLogger(Conference_paper.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tableConferenceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableConferenceMouseClicked
        // TODO add your handling code here:
        
         DefaultTableModel d1 = (DefaultTableModel)tableConference.getModel();
        int selectIndex = tableConference.getSelectedRow();
        
        int id =  Integer.parseInt(d1.getValueAt(selectIndex,   0).toString());
          txtauthors.setText(d1.getValueAt(selectIndex, 1).toString());
           txtyear.setText(d1.getValueAt(selectIndex, 2).toString());
            txttitle.setText(d1.getValueAt(selectIndex, 3).toString());
             txtconference.setText(d1.getValueAt(selectIndex, 4).toString());
              txtpages.setText(d1.getValueAt(selectIndex, 5).toString());
           
              jButton1.setEnabled(false);
    }//GEN-LAST:event_tableConferenceMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here: 
        this.setVisible(false);
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        Main  mn=new Main();
        mn.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) { 
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Conference_paper().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableConference;
    private javax.swing.JTextField txtauthors;
    private javax.swing.JTextField txtconference;
    private javax.swing.JTextField txtpages;
    private javax.swing.JTextField txtsearch;
    private javax.swing.JTextField txttitle;
    private javax.swing.JTextField txtyear;
    // End of variables declaration//GEN-END:variables
}
